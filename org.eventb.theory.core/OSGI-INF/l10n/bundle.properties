#Properties file for org.eventb.theory.core
Bundle-Vendor = University of Southampton
Bundle-Name = Event-B Theory Core

theoryFile = Event-B Theory File
theoryRoot = Event-B Theory Root
importTheory = Event-B Import Theory
typeParameter = Event-B Type Parameter
newOperatorDefinition = Event-B New Operator Definition
operatorWDcondition = Event-B Operator Well-Definedness Condition
operatorArgument = Event-B Operator Argument
directOperatorDefinition = Event-B Direct Operator Definition
proofRulesBlock = Event-B Proof Rules Block
rewriteRule = Event-B Rewrite Rule
rewriteRuleRHS = Event-B Rewrite Rule Right Hand Side
metaVariable = Event-B Rewrite Rules Metavariables
datatypeDefinition = Event-B Datatype Definition
datatypeConstructor = Event-B Datatype Constructor
constructorArgument = Event-B Datatype Constructor Argument
typeArgument = Event-B Datatype Type Argument
given = Event-B Inference Rule Given Hypothesis
infer = Event-B Inference Rule Infer Clause
inferenceRule = Event-B Inference Rule
theorem = Event-B Theorem
recursiveDefinitionCase = Event-B Recursive Operator Case
recursiveOperatorDefinition = Event-B Recursive Operator Definition
axiomaticDefinitionsBlock = Event-B Axiomatic Definitions Block
axiomaticDefinitionAxiom = Event-B Axiomatic Definition Axiom
axiomaticOperatorDefinition = Event-B Axiomatic Operator Definition
axiomaticTypeDefinition = Event-B Axiomatic Type Definition

scTheoryFile = Event-B Statically Checked Theory File 
scTheoryRoot = Event-B Statically Checked Theory Root 
scTypeParameter = Event-B Statically Checked Type Parameter
scDatatypeDefinition = Event-B Statically Checked Datatype Definition
scTypeArgument = Event-B Statically Checked Type Argument
scDatatypeConstructor = Event-B Statically Checked Datatype Constructor
scConstructorArgument = Event-B Statically Checked Constructor Argument
scNewOperatorDefinition = Event-B Statically Checked Operator Definition
scDirectOperatorDefinition = Event-B Statically Checked Direct Operator Definition
scOperatorArgument = Event-B Statically Checked Operator Argument
scGiven = Event-B Statically Checked Given
scInfer = Event-B Statically Checked Infer
scInferenceRule = Event-B Statically Checked Inference Rule
scMetavariable =  Event-B Statically Checked Metavariable
scTheorem = Event-B Statically Checked Theorem
scRewriteRuleRHS = Event-B Statically Checked Rewrite Rule RHS
scRewriteRule = Event-B Statically Checked Rewrite Rule
scProofRulesBlock = Event-B Statically Checked Proof Rules Block
scImportTheory = Event-B Statically Checked Import Theory
scRecursiveOperatorDefinition = Event-B Statically Checked Recursive Operator Definition
scRecursiveDefinitionCase = Event-B Statically Checked Recursive Definition Case

scAxiomaticDefinitionAxiom = Event-B Statically Checked Axiomatic Definition Axiom
scAxiomaticDefinitionsBlock = Event-B Statically Checked Axiomatic Definitions Block
scAxiomaticOperatorDefinition = Event-B Statically Checked Axiomatic Operator Definition
scAxiomaticTypeDefinition = Event-B Statically Checked Axiomatic Type Definition

deployedTheoryFile = Event-B Deployed Theory File
deployedTheoryRoot = Event-B Deployed Theory Root
useTheory = Event-B Statically Checked Use Theory

# Defined attributes
associativeAttr = Event-B Operator Associative Attribute
commutativeAttr = Event-B Operator Commutative Attribute
formulaAttr = Event-B Operator Formula Attribute
formulaTypeAttr = Event-B Operator Formula Type Attribute
notationTypeAttr = Event-B Operator Notation Type Attribute
typeAttr = Event-B Type Attribute
eventBcompleteAttr = Event-B Rewrite Rule Complete Attribute
eventBdesc = Event-B Rewrite Rule Description Attribute
definitionalAttr = Event-B Rewrite Rule Definitional Attribute
givenTypeAttr = Event-B Given Type Attribute
hasErrorAttr = Event-B Has Error Attribute
reasoningTypeAttr = Event-B Inference Rule Reasoning Type Attribute
groupIDAttr = Event-B Operator Group ID Attribute
validatedAttr = Event-B Validated Attribute
outdatedAttr = Event-B Outdated Attribute
orderAttr = Event-B Theorem Order Attribute
wdAttr = Event-B D Well-Definedness Attribute
importTheoryAttr = Event-B Theory Import Theory Attribute
inductiveArgumentAttr = Event-B Theory Inductive Argument Attribute
applicabilityAttr = Event-B Rule Applicability Attribute
# Tools
theorySCTool =  Theory Static Checker
theoryPOGTool = Theory Proof Obligation Generator
theorySCExtractor = Theory Extractor of Static Checker
theoryPOGExtractor = Theory Extractor of Proof Obligation Generator

# SC Modules
scTheoryModule = Theory Root Module
scImportTheoryModule = Theory Import Theory Module
scTypeParameterModule = Theory Type Parameter Module
scDatatypeModule = Theory Datatype Definition Module
scDatatypeConstructorModule = Theory Datatype Constructor Module
scDatatypeDestructorModule = Theory Datatype Destructor Module
scDatatypeDefinitionCheckerModule = Theory Datatype Definition Checker Module
scOperatorModule = Theory Operator Definition Module
scOperatorFilterModule = Theory Operator Definition Filter Module

scOperatorArgumentModule = Theory Operator Argument Module

scOperatorSemanticPropertiesModule = Theory Operator Semantic Properties Module
scOperatorWDConditionModule = Theory Operator Well-Definedness Condition Module
scOperatorWDConditionFilterModule = Theory Operator Well-Definedness Condition Filter Module
scOperatorSyntacticPropertiesModule = Theory Operator Syntactic Properties Module
scOperatorDirectDefinitionModule = Theory Operator Direct Definition Module
scOperatorRecursiveDefinitionModule = Theory Operator Recursive Definition Module
scOperatorRecursiveDefinitionFilterModule = Theory Operator Recursive Definition Filter Module
scOperatorRecursiveCaseModule = Theory Operator Recursive Case Module
scOperatorGrammarPatcherModule = Theory Operator Grammar Patcher Module

scTheoremModule = Theory Theorem Module
scTheoremFilterModule = Theory Theorem Filter Module

scProofRulesBlockModule = Theory Proof Rules Block
scMetavariableModule = Theory Metavariable Module
scMetavariableFilterModule = Theory Metavariable Filter Module
scRewriteRuleModule = Theory Rewrite Rule Module
scRewriteRuleFilterModule = Theory Rewrite Rule Filter Module
scRewriteRuleRHSModule = Theory Rewrite Rule RHS Module
scRewriteRuleRHSFilterModule = Theory Rewrite Rule RHS Filter Module
scInferenceRuleModule = Theory Inference Rule Module
scInferenceRuleFilterModule = Theory Inference Rule Filter Module
scInferenceInferClauseModule = Theory Inference Rule Infer Clause Module
scInferenceGivenClauseModule = Theory Inference Rule Given Clause Module
# SC States
theoryLabelSymbolTable = Theory Label Symbol Table
theoryAccuracyInfo = Theory Accuracy Information
datatypeTable = Datatype Table
operatorLabelSymbolTable = Operator Label Symbol Table
operatorInformation = Operator Information
rewriteRuleLabelSymbolTable = Rewrite Rule Label Symbol Table
ruleAccuracyInfo = Rule Accuracy Info
inferenceIdentifiers = Inference Rule Clauses Identifiers
recursiveDefinitionInfo = Recursive Definition Information

# POG Modules
pogTheoryModule = Theory POG Root Module
pogTheoryTypeParametersModule = Theory POG Type Parameters Module
pogTheoryHypothesesModule = Theory POG Hypotheses Module
pogTheoryCommitHypothesesModule = Theory POG Commit Hypotheses Module
pogTheoryOperatorExtensionModule = Theory POG Operator Extension Module
pogTheoryRulesBlockModule = Theory POG Rules Block Module
pogTheoryRewriteRuleModule = Theory POG Rewrite Rule Module
pogTheoryInferenceRuleModule = Theory POG Inference Rule Module
pogTheoryTheoremModule = Theory POG Theorem Module

# Configurations
thySC = Theory static checker root module
thyBaseSC = Theory static checker base module
thyPOG = Theory proof obligation generator root module
thyBasePOG = Theory proof obligation generator base module
thyBase =Theory base (SC + POG) module
thy = Theory Configuration

deployedElements = Deployed Elements