#Properties file for org.eventb.theory.core
Bundle-Vendor = University of Southampton
Bundle-Name = Event-B Theory Core

theoryFile = Event-B Theory File
theoryRoot = Event-B Theory Root
typeParameter = Event-B Type Parameter
newOperatorDefinition = Event-B New Operator Definition
operatorWDcondition = Event-B Operator Well-Definedness Condition
operatorArgument = Event-B Operator Argument
directOperatorDefinition = Event-B Direct Operator Definition
proofRulesBlock = Event-B Proof Rules Block
rewriteRule = Event-B Rewrite Rule
rewriteRuleRHS = Event-B Rewrite Rule Right Hand Side
metaVariable = Event-B Rewrite Rules Metavariables
datatypeDefinition = Event-B Datatype Definition
datatypeConstructor = Event-B Datatype Constructor
constructorArgument = Event-B Datatype Constructor Argument
typeArgument = Event-B Datatype Type Argument
given = Event-B Inference Rule Given Hypothesis
infer = Event-B Inference Rule Infer Clause
inferenceRule = Event-B Inference Rule
theorem = Event-B Theorem

scTheoryFile = Event-B Statically Checked Theory File 
scTheoryRoot = Event-B Statically Checked Theory Root 
scTypeParameter = Event-B Statically Checked Type Parameter
scDatatypeDefinition = Event-B Statically Checked Datatype Definition
scTypeArgument = Event-B Statically Checked Type Argument
scDatatypeConstructor = Event-B Statically Checked Datatype Constructor
scConstructorArgument = Event-B Statically Checked Constructor Argument
scNewOperatorDefinition = Event-B Statically Checked Operator Definition
scDirectOperatorDefinition = Event-B Statically Checked Direct Operator Definition
scOperatorArgument = Event-B Statically Checked Operator Argument
scGiven = Event-B Statically Checked Given
scInfer = Event-B Statically Checked Infer
scInferenceRule = Event-B Statically Checked Inference Rule
scMetavariable =  Event-B Statically Checked Metavariable
scTheorem = Event-B Statically Checked Theorem
scRewriteRuleRHS = Event-B Statically Checked Rewrite Rule RHS
scRewriteRule = Event-B Statically Checked Rewrite Rule
scProofRulesBlock = Event-B Statically Checked Proof Rules Block

# Defined attributes
associativeAttr = Event-B Operator Associative Attribute
commutativeAttr = Event-B Operator Commutative Attribute
formulaAttr = Event-B Operator Formula Attribute
formulaTypeAttr = Event-B Operator Formula Type Attribute
notationTypeAttr = Event-B Operator Notation Type Attribute
syntaxSymbolAttr = Event-B Operator Syntax Symbol Attribute
typeAttr = Event-B Type Attribute
eventBautoAttr = Event-B Rule Automatic Attribute
eventBinteractiveAttr = Event-B Rule Interactive Attribute
eventBcompleteAttr = Event-B Rewrite Rule Complete Attribute
eventBtoolTip = Event-B Rewrite Rule Tool Tip Attribute
eventBdesc = Event-B Rewrite Rule Description Attribute
definitionalAttr = Event-B Rewrite Rule Definitional Attribute
givenTypeAttr = Event-B Given Type Attribute
hasErrorAttr = Event-B Has Error Attribute

# Tools
theorySCTool =  Theory Static Checker
theoryPOGTool = Theory Proof Obligation Generator
theorySCExtractor = Theory Extractor of Static Checker
theoryPOGExtractor = Theory Extractor of Proof Obligation Generator

# SC Modules
scTheoryModule = Theory Root Module
scTypeParameterModule = Type Parameter Module
datatypeDefinitionModule = Datatype Definition Module
datatypeConstructorModule = Datatype Constructor Module
datatypeDestructorModule = Datatype Destructor Module
datatypeDestructorIdentsModule = Datatype Destructor Idents Module
datatypeDefinitionFilterModule = Datatype Definition Filter Module
newOperatorDefinitionModule = New Operator Definition Module
operatorDefinitionFilterModule = Operator Definition Filter Module
operatorArgumentFilterModule = Operator Argument Filter Module
operatorArgumentModule = Operator Argument Module
operatorPropertiesModule = New Operator Properties Module
operatorWDConditionModule = Operator Well-Definedness Condition Module
operatorWDConditionFilterModule = Operator WD Condition Filter Module
directOperatorDefinitionModule = Direct Operator Definition Module
operatorGrammarPatcherModule = Operator Grammar Patcher Module
proofRulesBlockModule = Proof Rules Block Module
metavariableModule = Metavariables Module
metavariableFilterModule = Metavariables Filter Module
theoremModule = Theorem Module
theoremFilterModule = Theorem Filter Module
theoryRewriteRuleModule = Theory Rewrite Rule Module
theoryRewriteRuleAutoModule = Theory Rewrite Rule Auto Module
theoryRewriteRuleCompleteModule = Theory Rewrite Rule Complete Module
theoryRewriteRuleInterModule = Theory Rewrite Rule Inter Module
theoryRewriteRuleRHSModule = Theory Rewrite Rule RHS Module
theoryRewriteRuleLHSModule = Theory Rewrite Rule LHS Module
theoryRewriteRuleSidesModule = Theory Rewrite Rule Sides Module
theoryRewriteRuleRHSFormulasIdentModule = Theory Rewrite Rule RHS Formulas Ident Module
theoryRewriteRuleRHSFormulasPredVarsModule = Theory Rewrite Rule RHS Formulas Pred Vars Module

# SC States
theoryLabelSymbolTable = Theory Label Symbol Table
theoryAccuracyInfo = Theory Accuracy Information
addedTypeExpression = Added Type Expression
referencedTypes = Referenced Types
datatypeTable = Datatype Table
operatorLabelSymbolTable = Operator Label Symbol Table
filteredLHSs = Filtered Left Hand Sides
parsedLHSFormula = Parsed LHS Formula
parsedRHSFormula = Parsed RHS Formula
operatorInformation = Operator Information
rewriteRuleLabelSymbolTable = Rewrite Rule Label Symbol Table
ruleAccuracyInfo = Rule Accuracy Info

# Configurations
thySC = Theory static checker root module
thyBaseSC = Theory static checker base module
thyPOG = Theory proof obligation generator root module
thyBasePOG = Theory proof obligation generator base module
thyBase =Theory base (SC + POG) module
thy = Theory Configuration